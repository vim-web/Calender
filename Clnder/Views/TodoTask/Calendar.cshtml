@{
    ViewBag.Title = "Task Calendar";
}

<div class="container mt-5">
    <h2 class="text-center">Task Calendar</h2>
    <div id="calendar"></div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth', // Default view
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: function (fetchInfo, successCallback, failureCallback) {
                    $.ajax({
                        url: '@Url.Action("GetTasksForCalendar", "TodoTask")', // Endpoint to fetch tasks
                        method: 'GET',
                        dataType: 'json',
                        beforeSend: function() {
                            // Show loading indicator
                            $('#calendar').html('<p>Loading...</p>');
                        },
                        success: function (data) {
                            var events = data.map(function (task) {
                                return {
                                    title: task.Title,
                                    start: task.DueDate, // Date in YYYY-MM-DD format
                                    description: task.Description,
                                    status: task.Status,
                                    color: getStatusColor(task.Status), // Set color based on status
                                    url: '@Url.Action("Edit", "TodoTask", new { id = "__id__" })'.replace('__id__', task.Id)
                                };
                            });
                            successCallback(events);
                        },
                        error: function () {
                            failureCallback();
                            alert('Failed to load tasks');
                        }
                    });
                },
                eventClick: function (info) {
                    if (info.event.url) {
                        window.open(info.event.url, "_blank");
                        return false;
                    }
                }
            });

            calendar.render(); // Render the calendar
        });

        // Function to return color based on task status
        function getStatusColor(status) {
            switch (status) {
                case 'Pending':
                    return 'orange'; // Pending status color
                case 'In Progress':
                    return 'blue'; // In Progress status color
                case 'Completed':
                    return 'green'; // Completed status color
                default:
                    return 'gray'; // Default color if status is unknown
            }
        }
    </script>
}
